endpoint: ${env:URL_BASE}/ohernandez/${env:ENVIRONMENT}
databaseType: document
datamodel:
  - ./models/actor.prisma
  - ./models/director.prisma
  - ./models/movie.prisma
  - ./models/purchase.prisma
  - ./models/room.prisma
  - ./models/seat.prisma
  - ./models/show.prisma
  - ./models/ticket.prisma
  - ./models/user.prisma
  - ./models/card.prisma
  - ./models/product.prisma
  - ./models/prodnquan.prisma
  - ./models/employee.prisma
  - ./models/cinema.prisma
  - ./models/payroll.prisma

generate:
  - generator: typescript-client
    output: ../src/generated/prisma-client
  - generator: graphql-schema
    output: ../src/types/generated/prisma-schema.graphql
# Seed your service with initial data based on `seed.graphql`.
seed:
  import: seed.graphql

# Ensures Prisma client is re-generated after a datamodel change.
# The `prisma generate` command was executed twice. Since Prisma 1.31, 
# the Prisma client is generated automatically after running `prisma deploy`.
# It is not necessary to generate it via a `post-deploy` hook any more, you can 
# therefore remove the hook if you do not need it otherwise.
# hooks:
#   post-deploy:
#     - prisma generate

# If specified, the `secret` must be used to generate a JWT which is attached
# to the `Authorization` header of HTTP requests made against the Prisma API.
# Info: https://www.prisma.io/docs/reference/prisma-api/concepts-utee3eiquo#authentication
secret: ${env:PRISMA_SECRET}